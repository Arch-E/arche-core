<?xml version="1.0" encoding="UTF-8"?>
<form>
   <p><b>Generated content</b></p><p>This plug-in has been created using content templates. The following templates were used:</p>
   <li style="text" value="1."><b>Sample Action Set.</b>This template creates a simple action set that adds <b>Sample Menu</b> to the menu bar and a button to the tool bar. Both the menu item in the new menu and the button invoke the same <b>Sample Action</b>. Its role is to open a simple message dialog with a message of your choice.</li>
   <li style="text" value="2."><b>Sample Help Table of Contents.</b>This template creates a Help table of contents. If this table is set to primary, it can be standalone, or integrated into pre-set categories. If the table is not set to primary, it can optionally be integrated into a primary table of contents for testing. </li>
   <li style="text" value="3."><b>Sample Perspective Extensions.</b>This template creates extensions to the target perspective.  It adds a view shortcut, a wizard shortcut, a perspective shortcut, an action set and a view to the target perspective.</li>
   <li style="text" value="4."><b>Sample Popup Menu.</b>This template adds a submenu and a new action to a target object's popup menu.  This contribution will appear in all viewers where an object of the specified type is selected.</li>
   <li style="text" value="5."><b>Preference Page.</b>This template creates a page that is contributed to the Preferences. It demonstrates how to create common preference fields and how to save and restore values between invocations. To see the result, select <b>Window</b> then <b>Preferences...</b> from the menu bar.</li>
   <li style="text" value="6."><b>Sample Property Page.</b>This template adds a property page to a resource and will appear in the Properties Dialog for that resource.  This property page can be used to view and set application-specific properties of a resource.</li>
   <li style="text" value="7."><b>Sample View.</b>This template creates a workbench view. The view is contributed to the workbench by creating a category. The view can be opened by selecting <b>Window</b>, <b>Show View</b> and then <b>Other...</b> on the menu bar. The template offers several choices including pop-up menu support, local tool bar, double-click, sorting and filtering. The view can be configured to react to changes elsewhere in the workbench.</li>
   <p/><p><b>Tips on working with this plug-in project</b></p><li>For the view of the new plug-in at a glance, go to the <img href="pageImage"/><a href="OverviewPage">Overview</a>.</li><li>You can test the contributions of this plug-in by launching another instance of the workbench. On the <b>Run</b> menu, click <b>Run As</b> and choose <img href="runTimeWorkbenchImage"/><a href="action.run">Run-time Workbench</a> from the available choices.</li><li>You can add more functionality to this plug-in by adding extensions using the <a href="action.newExtension">New Extension Wizard</a>.</li><li>The plug-in project contains Java code that you can debug. Place breakpoints in Java classes. On the <b>Run</b> menu, select <b>Debug As</b> and choose <img href="runTimeWorkbenchImage"/><a href="action.debug">Run-time Workbench</a> from the available choices.</li>
</form>
