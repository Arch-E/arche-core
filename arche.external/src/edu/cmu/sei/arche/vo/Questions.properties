##########################################################################
# Copyright (c) 2004 SEI 
# All rights reserved. This artifact and the accompanying materials 
# are made available under the terms of BLAH, BLAH,
# which accompanies this distribution, and is available at
# http://www.sei.cmu.edu/ArchE
##########################################################################
#
# Properties are grouped by questionId. For questionId 'xyz' the following 
# properties can be defined:
#   - xyz.questionType: defines the way the user will answer the question
#          - singleChoice: radio button
#          - multipleChoice: check box
#          - inputValue: one or more input text boxes
#          - yesNo: radio button with pre-defined options, "Yes" and "No"
#          - aler: not a question, just gives information to the user.
#   - xyz.category: title to the question dialog box
#   - xyz.purpose: introductory explanation to the question
#   - xyz.question: text of the question per se
#   - xyz.columns: if present, indicates how many columns should be used
#                  to render the answer options (default is 1)
#   - xyz.optionLabel1: label for the first answer option/input field
#   - xyz.optionLabel2: label for the 2nd answer option/input field
#                  ...
#   - xyz.optionLabelN: label for the Nth answer option/input field
#
# In the text of any of the properties, tags can be used as place holders 
# for dynamic data elements. Examples:
# - <1> ==> tag is replaced with text of first parameter/option.
# - <2+> ==> tag is replaced with text of all parameters/options from the 
#            2nd to the last. The Strings should be separated by comma. 
# - <3:desc> ==> third parameter/option is necessarily a fact id in this
#                case. The fact is retrieved from ArchE Core and the tag
#                is replaced with the value in slot ?desc? in that fact. 
# - <4+:desc> ==> tag is replaced with the value of slot ?desc? in the 
#                 facts whose fact ids are the contents of parameters/options
#                 from the 4th to the last. The Strings should be separated 
#                 by comma.
# 
##########################################################################


##########################################################################
#(MAIN::AskQuestion
#	(questionId decomposedDependency)
#	(parent <Fact-389>)
#	(affectedFacts <Fact-389>)
#	(parameters "Tire preassure monitor" "Barometric pressure compensation" "Tire preassure monitor")
#	(options <Fact-369> <Fact-373> <Fact-371> <Fact-375>)
#	(default all) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
decomposedDependency.questionType = multipleChoice
decomposedDependency.category = Possible Inconsitency
decomposedDependency.purpose = ArchE dicovered a possible inconsistency with dependencies among \
			responsibilities
decomposedDependency.question = There is a dependency between the responsibilities "<1>" and "<2>", where the \
			responsibility "<3>" is decomposed into other responsibilities. Please describe what to do with \
			the dependency.
decomposedDependency.optionLabel1 = "<1+:name>"

##########################################################################
# (MAIN::AskQuestion
#	(questionId costOfChange)
#	(parent nil)
#	(affectedFacts <Fact-53> <Fact-59> <Fact-65>)
#	(parameters )
#	(options <Fact-53> <Fact-59> <Fact-65>)
#	(default "0.0 0.0 0.0 ") (answer ) (answerAvailable nil) (log nil))
#)
##########################################################################
costOfChange.questionType = inputValue
costOfChange.category = Values for parameters
costOfChange.purpose = To calculate the impact of a change ArchE needs to know the effort of changing \	
			responsibilities
costOfChange.question = Please provide an estimation for changing the listed responsibilities?
costOfChange.optionLabel1 = Cost of change (person hours) for "<1+:name>":

##########################################################################
#(MAIN::AskQuestion
#	(questionId probabilityOfPropagation)
#	(parent <Fact-159>)
#	(affectedFacts <Fact-159>)
#	(parameters <Fact-281> <Fact-285>)
#	(options nil)
#	(default 0.0) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
probabilityOfPropagation.questionType = inputValue
probabilityOfPropagation.category = Values for parameters
probabilityOfPropagation.purpose = To calculate the impact of a change ArchE needs to know how likely \
			it is that a change to one responsibility propagates to another responsibility
probabilityOfPropagation.question = What is the probability that a change to responsibility \
			"<1:name>" propagates to responsibility "<2:name>" or vice versa?
probabilityOfPropagation.optionLabel1 = Probability (0..1):

##########################################################################
#(MAIN::AskQuestion
#	(questionId localize)
#	(parent <Fact-351>)
#	(affectedFacts <Fact-351>)
#	(parameters <Fact-268> <Fact-270> ...)
#	(options nil)
#	(default yes) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
localize.questionType = yesNo
localize.category = Applying modifiability tactics
localize.purpose = The scenario "<0:description>" cannot be satisfied by the current design. It affects \
			the responsibilities "<2+:name>". Therefore, it might be a good idea to apply the localization tactic. An rough \
			estimation suggests that you could save about "<1>" percent of the modification cost for this scenario by doing so.
localize.question = Do you want me to apply the localization tactic for scenario "<0:description>"?

##########################################################################
#(MAIN::AskQuestion
#	(questionId encapsulate)
#	(parent <Fact-351>)
#	(affectedFacts  <Fact-268> <Fact-351>)
#	(parameters <Fact-268> 40 8)
#	(options nil)
#	(default yes) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
encapsulate.questionType = inputValue
encapsulate.category = Applying modifiability tactics
encapsulate.purpose = The responsibility "<0:name>" has multiple strong dependencies to other \
			responsibilities. Therefore, it might be a good idea to encapsulate the responsibility \
			"<0:name>" to reduce the dependencies. An estimation with a level "<1>" encapsulation \
			suggests that you could reduce costs from "<2>" person by "<3>" percent for this change scenario.
encapsulate.question = Please specify what level of encapsulation you want (0 = none, 10 = completely)?
encapsulate.optionLabel1 = Level of encapsulation:

##########################################################################
#(MAIN::AskQuestion
#	(questionId wrapper)
#	(parent <Fact-351>)
#	(affectedFacts <Fact-351>)
#	(parameters 30)
#	(options nil)
#	(default 0.0) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
wrapper.questionType = inputValue
wrapper.category = Applying modifiability tactics
wrapper.purpose = Dependencies from responsibilities to the responsibility "<0:name>", \
			have an indirect impact on a scenario. It may be beneficial to wrap this responsibility \
			so that changes are less likely to affect it. A wrapper with a cost of change "<1>" \
			person days could reduce the cost of change for the scenario from "<2>" person days to "<3>" person days.
wrapper.question = Do you want to create a wrapper around the responsibility <0:name>? If so, \
			please specify the cost of change for the wrapper.
wrapper.optionLabel1 = Cost for changing the wrapper (0 = no wrapper):

##########################################################################
#(MAIN::AskQuestion
#	(questionId intermediary)
#	(parent <Fact-351>)
#	(affectedFacts <Fact-351>)
#	(parameters 30)
#	(options nil)
#	(default 0.0) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
intermediary.questionType = inputValue
intermediary.category = Applying modifiability tactics
intermediary.purpose = Dependencies from responsibilities to the responsibility "<0:name>", \
			have an impact on a scenario. It may be beneficial to insert an intermediary \
			so that changes are less costly. An intermediary with a cost of change "<1>" \
			person days could reduce the cost of change for the scenario from "<2>" person days to "<3>" person days.
intermediary.question = Do you want insert an intermediary for responsibility <0:name>? If so, \
			please specify the cost of change for the intermediary.
intermediary.optionLabel1 = Cost for changing the intermediary (0 = no wrapper):

##########################################################################
#(MAIN::AskQuestion
#	(questionId adjustResponsibilityNameAndCost)
#	(parent <Fact-351>)
#	(affectedFacts <Fact-351> <Fact-158> <Fact-160> <Fact-421>)
#	(parameters "localization" <Fact-158> <Fact-160> <Fact-421>)
#	(options "Responsibility Name" "Cost of Change" 
#	(default "xxxx" "10.0" "yyyy" "5.0" "new" "0.0") (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
# In this case note that there are only two labels and N default answers.
# The labels are repeated cyclically. If we have six default answers, we'll
# use label1, label2, label1, label2, label1, label2 (in two columns as 
# specified)
##########################################################################
adjustResponsibilityNameAndCost.questionType = inputValue
adjustResponsibilityNameAndCost.category = Adjustment of Responsibility values because of applying tactics
adjustResponsibilityNameAndCost.purpose = Because of applying the "<1>" tactic, the description of \
			the responsibilities "<2+:name>", as well as the assigned cost for changing those \
			responsibilities might have to be adjusted.
adjustResponsibilityNameAndCost.question = Please provide the new descriptions and associated cost \
			of change?
adjustResponsibilityNameAndCost.columns = 2
adjustResponsibilityNameAndCost.optionLabel1 = "<1>":
adjustResponsibilityNameAndCost.optionLabel2 = "<2>":

##########################################################################
#(MAIN::AskQuestion
#	(questionId adjustResponsibilityName)
#	(parent <Fact-244>)
#	(affectedFacts <Fact-281> <Fact-283> <Fact-332>)
#	(parameters <Fact-281> <Fact-283> <Fact-332>)
#	(options "Name" "Description")
#	(default "Name1" "" "Name2" "" ...) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
adjustResponsibilityName.questionType = inputValue
adjustResponsibilityName.category = Change Responsibility name because of applying a tactic
adjustResponsibilityName.purpose = Because of the tactics applied, ArchE created new responsibilities \
			for you. You may want to review their names and adjust them accordingly.
adjustResponsibilityName.question = Please provide names and descriptions for the following new responsibilities
adjustResponsibilityName.columns = 2
adjustResponsibilityName.optionLabel1 = <1+>:

##########################################################################
#(MAIN::AskQuestion
#	(questionId adjustModuleName)
#	(parent <Fact-244>)
#	(affectedFacts <Fact-281> <Fact-283> <Fact-332>)
#	(parameters <Fact-281> <Fact-283> <Fact-332>)
#	(options "Name" "Description")
#	(default "Name1" "" "Name2" "" ...) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
adjustModuleName.questionType = inputValue
adjustModuleName.category = Change Module name because of applying a tactic
adjustModuleName.purpose = Because of the tactics applied, ArchE created new modules \
			for you. You may want to review their names and adjust them accordingly.
adjustModuleName.question = Please provide names for the following new modules
adjustModuleName.columns = 1
adjustModuleName.optionLabel1 = <1+>:

##########################################################################
#(MAIN::AskQuestion
#	(questionId adjustInterfaceName)
#	(parent <Fact-244>)
#	(affectedFacts <Fact-281> <Fact-283> <Fact-332>)
#	(parameters <Fact-281> <Fact-283> <Fact-332>)
#	(options "Name" "Description")
#	(default "Name1" "" "Name2" "" ...) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
adjustInterfaceName.questionType = inputValue
adjustInterfaceName.category = Change Interface name because of applying a tactic
adjustInterfaceName.purpose = Because of the tactics applied, ArchE created new interfaces \
			for you. You may want to review their names and adjust them accordingly.
adjustInterfaceName.question = Please provide names for the following new interfaces
adjustInterfaceName.columns = 1
adjustInterfaceName.optionLabel1 = <1+>:

##########################################################################
#(MAIN::AskQuestion
#	(questionId moveDependency)
#	(parent <Fact-244>)
#	(affectedFacts <Fact-281> <Fact-283> <Fact-332>)
#	(parameters "localization" <Fact-281> <Fact-283> <Fact-332>)
#	(options <Fact-332>)
#	(default 1) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
moveDependency.questionType = singleChoice
moveDependency.category = Adjust Dependencies
moveDependency.purpose = After the "<1>" tactic was applied, some functionality was moved \
			from "<2:name>" to "<4:name>". This might have an influence of the existing \
			dependency between the responsibilities "<2:name>" and "<3:name>" and \
			therefore the dependency might have to move to the new responsibility "<4:name>".
moveDependency.question = What do you want me to do with the dependency between the \
			responsibilities "<2:name>" and "<3:name>"?
moveDependency.optionLabel1 = Leave it where it is
moveDependency.optionLabel2 = Move the dependency to "<1:name>"
moveDependency.optionLabel3 = Both
moveDependency.optionLabel4 = Remove dependency

##########################################################################
#(MAIN::AskQuestion
#	(questionId wrongOutputFilename)
#	(parent System)
#	(affectedFacts nil)
#	(parameters nil)
#	(options nil)
#	(default "filename.name") (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
wrongOutputFilename.questionType = inputValue
wrongOutputFilename.category = Provide File Name
wrongOutputFilename.purpose = The file name given cannot be used for creating a file. The given \
			directory might be either wrong or does not exist
wrongOutputFilename.question = What is the correct file name?
wrongOutputFilename.optionLabel1 = File name:

##########################################################################
#(MAIN::AskQuestion
#	(questionId wrongInputFilename)
#	(parent System)
#	(affectedFacts nil)
#	(parameters "filename.name")
#	(options nil)
#	(default "filename.name") (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
wrongInputFilename.questionType = inputValue
wrongInputFilename.category = Provide File Name
wrongInputFilename.purpose = The file name "<1>" does not point to an existing file. The given \
			 directory might be either wrong or the file does not exist.
wrongInputFilename.question = What is the correct file name?
wrongInputFilename.optionLabel1 = File name:

##########################################################################
#(MAIN::AskQuestion
#	(questionId inconsistentData)
#	(parent System)
#	(affectedFacts nil)
#	(parameters "filename.name" "Errorinfo" "Content of problem line")
#	(options nil)
#	(default nil) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
inconsistentData.questionType = alert
inconsistentData.category = Warning
inconsistentData.purpose = When reading the file "<1>" an "<2>" was found in the line containing "<3>". \
			This line was ignored, but all correct line have been processed. Please correct this problem.
inconsistentData.question = 

##########################################################################
#(MAIN::AskQuestion
#	(questionId confirmCost)
#	(parent <Fact-159>)
#	(affectedFacts <Fact-159>)
#	(parameters <Fact-281> <Fact-285>)
#	(options nil)
#	(default 0.0) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
confirmCost.questionType = inputValue
confirmCost.category = Applying tactics
confirmCost.purpose = When specifying the cost of change of "<3:value>" for responsibility "<1:name>" \
			you may not have considered to build this responsibility in a way that would make it \
			easy to accommodate changes of the type specified by the scenario "<2:description>". \
			Doing so may lower the cost for change for this responsibility.
confirmCost.question = Please verify that the given cost are correct or specify the new cost when \
			preparing the responsibility for change.
confirmCost.optionLabel1 = Cost of change for "<0:name>":


##########################################################################
#(MAIN::AskQuestion
#	(questionId executionTime)
#	(parent nil)
#	(affectedFacts <Fact-53> <Fact-59> <Fact-65>)
#	(parameters )
#	(options <Fact-53> <Fact-59> <Fact-65>)
#	(default "0.0 0.0 0.0 ") (answer ) (answerAvailable nil) (log nil))
#)
##########################################################################
executionTime.questionType = inputValue
executionTime.category = Values for parameters
executionTime.purpose = To determine real-time schedulability ArchE needs to know the execution times of \	
			responsibilities
executionTime.question = Please provide execution times in milliseconds for the responsibilities listed.
executionTime.optionLabel1 = Execution time (milliseconds) for "<1+:name>":


##########################################################################
#(MAIN::AskQuestion
#	(questionId confirmReduceExecTime)
#	(parent <Fact-99>)
#	(affectedFacts <Fact-53> <Fact-99>)
#	(parameters 225 <Fact-53> <Fact-99> <Fact-23>)
#	(options 225 <Fact-53> <Fact-99> <Fact-23>)
#	(default 225) (answer nil) (answerAvailable nil) (log nil))
#)
##########################################################################
confirmReduceExecTime.questionType = inputValue
confirmReduceExecTime.category = Confirm ArchE Tactic Suggestion
confirmReduceExecTime.purpose = ArchE has suggested that the responsibility "<2:name>" have its execution time reduced \
	to <6> in order to try to satisfy the performance scenarios "<1:description>" \
	The latency will be reduced from <3> to <4>.
confirmReduceExecTime.question = Can ArchE reduce the execution time of this responsibility?
confirmReduceExecTime.optionLabel1 = Original execution time (milliseconds) for "<1:name>"

##########################################################################
#(MAIN::AskQuestion
#	(questionId confirmIncreasePeriod)
#	(parent <Fact-99>)
#	(affectedFacts <Fact-53> <Fact-99>)
#	(parameters 1500 <Fact-53> <Fact-99> <Fact-23>)
#	(options 1500 <Fact-53> <Fact-99> <Fact-23>)
#	(default 1500) (answer nil) (answerAvailable nil) (log nil))
#)
##########################################################################
confirmIncreasePeriod.questionType = inputValue
confirmIncreasePeriod.category = Confirm ArchE Tactic Suggestion
confirmIncreasePeriod.purpose = ArchE has suggested that the task corresponding to the scenario "<2:description>" have its period increased \
	to <1> in order to try to improve performance.
confirmIncreasePeriod.question = Can ArchE change the period of this task?
confirmIncreasePeriod.optionLabel1 = New period value (milliseconds) for scenario "<1:description>"
##########################################################################
#(MAIN::AskQuestion
#	(questionId confirmLengthenDeadline)
#	(parent <Fact-99>)
#	(affectedFacts <Fact-53> <Fact-99>)
#	(parameters 600 <Fact-53> <Fact-99> <Fact-23>)
#	(options 600 <Fact-53> <Fact-99> <Fact-23>)
#	(default 600) (answer nil) (answerAvailable nil) (log nil))
#)
##########################################################################
confirmLengthenDeadline.questionType = inputValue
confirmLengthenDeadline.category = Confirm ArchE Tactic Suggestion
confirmLengthenDeadline.purpose = ArchE has suggested that the task corresponding to the scenario "<2:description>" have its deadline lengthened \
	to <1> in order to try to improve performance.
confirmLengthenDeadline.question = Can ArchE lengthen the deadline of this task?
confirmLengthenDeadline.optionLabel1 = New deadline value (milliseconds) for scenario "<1:description>"


##########################################################################
#(MAIN::AskQuestion
#	(questionId noRespForRMAScenario)
#	(parent <Fact-99>)
#	(affectedFacts <Fact-99>)
#	(parameters <Fact-99>)
#	(options nil)
#	(default "RMA-RF-generated-Responsibility-583") (answer nil) (answerAvailable nil) (log nil))
#)
##########################################################################
noRespForRMAScenario.questionType = inputValue
noRespForRMAScenario.category = Assign Responsibilities to a Real-Time Performance Scenario
noRespForRMAScenario.purpose = Real-time performance scenarios must have at least one responsibility \
	associated with them in order to model their characteristics in the RMA reasoning framework.  A scenario's \
	task execution time is derived from its related responsibilities.
noRespForRMAScenario.question = The scenario "<1:description>" has no responsibilities assigned. Please provide \
	the description of a new responsibilitiy or exit this dialog and assign it an existing responsibility.
noRespForRMAScenario.optionLabel1 = New responsibility description:


##########################################################################
#(MAIN::AskQuestion
#	(questionId overUtilization)
#	(parent <Fact-99>)
#	(affectedFacts <Fact-99>)
#	(parameters 1.4)
#	(options nil)
#	(default nil) (answer nil) (answerAvailable nil) (log nil))
#)
##########################################################################
overUtilization.questionType = inputValue
overUtilization.category = Task model calculates that utilization is greater than 1.0
overUtilization.purpose = The RMA model has calculated the total CPU utilization of the system to be <1>.  If total utilization is greater than 1.0, then in the worst case the tasks cannot be completed in finite time.
overUtilization.question = The real-time performance model must be changed so that total utilization is less than 1.0.  Please reduce the execution times of responsibilities to reduce the total utilization.
overUtilization.optionLabel1 = New execution time (milliseconds) for "<1+:name>"

##########################################################################
#(MAIN::AskQuestion
#	(questionId combineVariationPoint)
#	(parent <Fact-351>)
#	(affectedFacts <Fact-351>)
#	(parameters <Fact-268> <Fact-270> ...)
#	(options nil)
#	(default yes) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
combineVariationPoint.questionType = yesNo
combineVariationPoint.category = Mange Variation Points
combineVariationPoint.purpose = The scenario "<0:description>" specifies some product variation, which affects \
			the responsibilities "<1+:name>". It helps to combine the parts of those responsibilities \
			that vary into a single variation point. Answering yes to the question will localize that variant \
			part into a single responsibility.
combineVariationPoint.question = Do you want me to localize the variant part for scenario "<0:description>"?

##########################################################################
#(MAIN::AskQuestion
#	(questionId variationPointCondition)
#	(parent <Fact-351>)
#	(affectedFacts <Fact-351>)
#	(parameters "List of existing input values" "List of existing variation points")
#	(options nil)
#	(default nil) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
variationPointCondition.questionType = inputValue
variationPointCondition.category = Variation Point Values
variationPointCondition.purpose = The condition under which the variation point "<0:name>" becomes active is not specified. \
			A variation point can either depend on some user provided input or on another variation point.
variationPointCondition.question = Please specify the condition under which this variation point becomes active. \
            Please use the identifies, such as VPn for a variation point or IPn for an input value. \
			The following user input values are available: "<2>" \
			The following variation points are available: "<1>".
variationPointCondition.optionLabel1 = Condition:

##########################################################################
#(MAIN::AskQuestion
#	(questionId variationPointMechanism)
#	(parent <Fact-351>)
#	(affectedFacts <Fact-351>)
#	(parameters "List of existing input values" "List of existing variation points")
#	(options nil)
#	(default nil) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
variationPointMechanism.questionType = singleChoice
variationPointMechanism.category = Variation Point Mechanism
variationPointMechanism.purpose = Every variation point requires a mechanism that supports building a specific product. \
			What type of mechanism to choose depends on the skills required by the person that creates the specific product.
variationPointMechanism.question = Please specify the mechanism to use for variation point "<0:name>". \
			Choose either from the displayed list or chose a new variability mechanism.
variationPointMechanism.optionLabel1 = New Variability Mechanism
variationPointMechanism.optionLabel2 = <1+>

##########################################################################
#(MAIN::AskQuestion
#	(questionId newVariabilityMechanism)
#	(parent <Fact-351>)
#	(affectedFacts <Fact-351>)
#	(parameters "List of existing input values" "List of existing variation points")
#	(options nil)
#	(default nil) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
newVariabilityMechanism.questionType = inputValue
newVariabilityMechanism.category = New Variability Mechanism
newVariabilityMechanism.purpose = You have chosen to specify a new variability mechanism for variation point "<0:name>". \
			This new variability mechanism has to be appropriate for "<1>" type of people. Although this mechanism \
			will be used for the variation point <0:name>, it will also be available for use in other variation points. 
newVariabilityMechanism.question = Please specify the new variability mechanism.
newVariabilityMechanism.optionLabel1 = Name
newVariabilityMechanism.optionLabel2 = Description
newVariabilityMechanism.optionLabel3 = User role required for using this mechanism (see source in scenario)
newVariabilityMechanism.optionLabel4 = Instantiation methode; separate multiple values with comma. (see stimulus in scenario)
newVariabilityMechanism.optionLabel5 = Automatable yes/no
newVariabilityMechanism.optionLabel6 = Difficulty to build this mechanism (0=easy, 10=very difficult)

##########################################################################
# (MAIN::AskQuestion
#	(questionId costOfInstantiation)
#	(parent nil)
#	(affectedFacts <Fact-53> <Fact-59> <Fact-65>)
#	(parameters )
#	(options "Variation Point Name" "Mechanism Name")
#	(default "xxxx" "10.0" "yyyy" "5.0" "new" "0.0") (answer ) (answerAvailable nil) (log nil))
#)
##########################################################################
costOfInstantiation.questionType = inputValue
costOfInstantiation.category = Values for instantiation costs
costOfInstantiation.purpose = To project the cost of building a specific product from this architecture \
            ArchE needs to know the instantiation cost for each variation point.
costOfInstantiation.question = Please provide an estimation for instantiating the listed variability mechansims. \
            You may also change the names of the listed variation points.
costOfInstantiation.columns = 2
costOfInstantiation.optionLabel1 = Adjust name for variation point "<1>":
costOfInstantiation.optionLabel2 = Cost of instantiation (in person hours) for mechanism "<2>" used in variation point above:

##########################################################################
#(MAIN::AskQuestion
#	(questionId invalidVariabilityDependency)
#	(parent <Fact-351>)
#	(affectedFacts <Fact-351>)
#	(parameters <Fact-351> "variation point name" "variation point/input value" "VPn/IPn")
#	(options "IPn" "VPn")
#	(default yes) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
invalidVariabilityDependency.questionType = multipleChoice
invalidVariabilityDependency.category = Invalid Dependency for Variation Point
invalidVariabilityDependency.purpose = With the condition you specified for variation point "<0:name>" you also specified \
			dependencies to a non-existing input values and/or variation points. Dependencies must be valid, so either those dependency must be removed or a new ones must be creted.
invalidVariabilityDependency.question = Please check all the dependencies to variation points / input values you want to keep
invalidVariabilityDependency.optionLabel1 = keep <1+>

##########################################################################
#(MAIN::AskQuestion
#	(questionId composedVariationPoint)
#	(parent <Fact-351>)
#	(affectedFacts <Fact-351>)
#	(parameters <Fact-268> <Fact-270> ...) variation point and responsibilities
#	(options <Fact-432> ...) responsibilities
#	(default "1") (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
composedVariationPoint.questionType = singleChoice
composedVariationPoint.category = Decomposed Variation Point
composedVariationPoint.purpose = The variation point "<0:name>" affects the responsibility "<1:name>". \
			This responsibility is decomposed into the responsibilities "<2+:name>". This could mean that \
			those responsibilities are alternative implementations of this variation point. If this is not the case \
			then you need to specify which of those responsibilities are affected by this variation.
composedVariationPoint.question = Please check the appropriate assignment.
composedVariationPoint.optionLabel1 = all the listed responsibilities are alternatives
composedVariationPoint.optionLabel2 = all the listed responsibilities vary in the associated scenario. (Note! Checking this will assign variation points to all those responsibilities)

##########################################################################
#(MAIN::AskQuestion
#	(questionId insertMechanismPattern)
#	(parent <Fact-351>)
#	(affectedFacts <Fact-351>)
#	(parameters "name of variability mechanism" "name of variation point" "goupnames for the patterns" ...)
#	(options "name : description" ...) name and description pairs of mechanism patterns
#	(default "1") (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
insertMechanismPattern.questionType = singleChoice
insertMechanismPattern.category = Insert Design for Variability Mechanism
insertMechanismPattern.purpose = The variability mechanism (<1>) you have chosen to use for variation point "<2>" \
			can be implemented in the following ways listed below. The implementation you choose will be applied to \
			the existing design.
insertMechanismPattern.question = Please choose the appropriate variability mechanism implementation
insertMechanismPattern.optionLabel1 = <1+>

##########################################################################
#(MAIN::AskQuestion
#	(questionId executionTime1)
#	(parent nil)
#	(affectedFacts <Fact-53> <Fact-59> <Fact-65>)
#	(parameters )
#	(options <Fact-53> <Fact-59> <Fact-65>)
#	(default "0.0 0.0 0.0 ") (answer ) (answerAvailable nil) (log nil))
#)
##########################################################################
executionTime1.questionType = inputValue
executionTime1.category = Values for parameters
executionTime1.purpose = To see if I can get a question to display
executionTime1.question = Please provide execution times in nanoseconds for the responsibilities listed.
executionTime1.optionLabel1 = Execution time (nanoseconds) for "<1+:name>":

##########################################################################
#(MAIN::AskQuestion
#	(questionId createNewSharedResource)
#	(parent nil)
#	(affectedFacts)
#	(parameters Multiple fact)
#	(options)
#	(default) (answer ) (answerAvailable nil) (log nil))
#)
##########################################################################
createNewSharedResource.questionType = inputValue
createNewSharedResource.category = Please modify the new shared resource.
createNewSharedResource.purpose = Change the default values for the shared resource. 
createNewSharedResource.question = Rename the shared resource:
createNewSharedResource.optionLabel1 = Name:
createNewSharedResource.optionLabel2 = Description:

##########################################################################
#(MAIN::AskQuestion
#	(questionId checkSharedResource)
#	(parent nil)
#	(affectedFacts)
#	(parameters Multiple facts)
#	(options)
#	(default) (answer ) (answerAvailable nil) (log nil))
#) 
##########################################################################
checkSharedResource.questionType = singleChoice
checkSharedResource.category = Shared Resources
checkSharedResource.purpose = ArchE has detected a potential shared resource! The following responsibility "<1:name>" is present in multiple performance scenarios.  
checkSharedResource.question = Select an existing shared resource for the responsibility (if any have been previously created) \
or choose to create a new shared resource for the responsibility 
checkSharedResource.optionLabel1 = This responsibility is reentrant and does not require a shared resource.
checkSharedResource.optionLabel2 = This responsibility requires a new shared resource? (New question)
checkSharedResource.optionLabel3 = This responsibility requires Existing Shared Resource : "<2+:name>"

##########################################################################
#(MAIN::AskQuestion
#	(questionId mutualExclusionChanged)
#	(parent nil)
#	(affectedFacts)
#	(parameters Multiple facts)
#	(options)
#	(default) (answer ) (answerAvailable nil) (log nil))
#) 
##########################################################################
mutualExclusionChanged.questionType = singleChoice
mutualExclusionChanged.category = Shared Resources
mutualExclusionChanged.purpose = ArchE has detected a potential shared resource! The following responsibility "<1:name>" mutual exclusion property has been \
changed to TRUE.  
mutualExclusionChanged.question = Select an existing shared resource for the responsibility (if any have been previously created) \
or choose to create a new shared resource for the responsibility 
mutualExclusionChanged.optionLabel1 = This responsibility is reentrant and does not require a shared resource.
mutualExclusionChanged.optionLabel2 = This responsibility requires a new shared resource? (New question)
mutualExclusionChanged.optionLabel3 = This responsibility requires Existing Shared Resource : "<2+:name>"

##########################################################################
#(MAIN::AskQuestion
#	(questionId)
#	(parent)
#	(affectedFacts)
#	(parameters )
#	(options nil)
#	(default yes) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
supportPCP.questionType = yesNo
supportPCP.category = Priority Ceiling Protocol
supportPCP.purpose = ArchE uses the priority ceiling protocol to determine the blocking time for each resource. \
Priority ceiling protocol assumes that each task can be blocked only once per shared resource.
supportPCP.question = Does the Operating system support priority ceiling protocol?

##########################################################################
#(MAIN::AskQuestion
#	(questionId combineScenarios)
#	
#	
#	(parameters <Fact-268> <Fact-278> <Fact-299>)
#	(options nil)
#	(answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
combineScenarios.questionType = yesNo
combineScenarios.category = Performance
combineScenarios.purpose = Combine scenarios
			
combineScenarios.question = Can the following performance scenarios that share the same deadline and period be combined? \
            (Scenario 1 description "<1:description>",   \
            Period: "<1:stimulusValue>" "<1:stimulusUnit>",  \
            Deadline: "<1:measureValue>", "<1:measureUnit>")  \
			(Scenario 2 description "<2:description>",   \
            Period: "<2:stimulusValue>" "<2:stimulusUnit>",  \
            Deadline: "<2:measureValue>", "<2:measureUnit>")  \
			
##########################################################################
#(MAIN::AskQuestion
#	(questionId editPerformanceScenario)
#	(parent System)
#	(affectedFacts nil)
#	(parameters <Fact-268>)
#	(options nil)
#	(default nil) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
editPerformanceScenario.questionType = alert
editPerformanceScenario.category = Please remember to review this scenario and make any needed modifications.
editPerformanceScenario.purpose = The following scenario has been created or modified by ArchE. 
editPerformanceScenario.question =  (Scenario description "<1:description>",   \
            Period: "<1:stimulusValue>" "<1:stimulusUnit>",  \
            Deadline: "<1:measureValue>", "<1:measureUnit>")  
##########################################################################
#(MAIN::AskQuestion
#	(questionId decomposeResponsibility)
#	
#	
#	(parameters <Fact-268> <Fact-278> <Fact-299>)
#	(options nil)
#	(default yes) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
decomposeResponsibility.questionType = yesNo
decomposeResponsibility.category = Performance
decomposeResponsibility.purpose = Decompose responsibilities
			
decomposeResponsibility.question = The two following scenarios share a responsibility \
            (Scenario 1 description "<1:description>",   \
            Period: "<1:stimulusValue>" "<1:stimulusUnit>",  \
            Deadline: "<1:measureValue>", "<1:measureUnit>")  \
			(Scenario 2 description "<2:description>",   \
            Period: "<2:stimulusValue>" "<2:stimulusUnit>",  \
            Deadline: "<2:measureValue>", "<2:measureUnit>")  \
			These scenarios have responsibility "<3:name>" in common. \
			Can this responsibility be decomposed between these scenarios?
##########################################################################
#(MAIN::AskQuestion
#	(questionId editResponsibilities)
#	
#	
#	(parameters <Fact-268> <Fact-278> )
#	(options nil)
#	(default yes) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
editResponsibilities.questionType = inputValue
editResponsibilities.category = Performance
editResponsibilities.purpose = Replace default values for decomposed responsibilites. 
editResponsibilities.question = Please note if you selected to decompose a responsibility to place part in another task. \
Responsibility 1 will execute in the original task's period and deadline. \
Responsibility 2 will execute in the new task's period and deadline.
editResponsibilities.optionLabel1 = Name of new responsibility 1:
editResponsibilities.optionLabel2 = Description of new responsibility 1:
editResponsibilities.optionLabel3 = Execution time of new responsibility 1:
editResponsibilities.optionLabel4 = Name of new responsibility 2:
editResponsibilities.optionLabel5 = Description of new responsibility 2:
editResponsibilities.optionLabel6 = Execution time of new responsibility 2:
##########################################################################
#(MAIN::AskQuestion
#	(questionId AdjustTask)
#	(parent <Fact-351>)
#	(parameters <Fact-158> <Fact-160> <Fact-421>)
#	(options "Responsibility Name" "Cost of Change" 
#	(default "xxxx" "10.0" "yyyy" "5.0" "new" "0.0") (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
# In this case note that there are only two labels and N default answers.
# The labels are repeated cyclically. If we have six default answers, we'll
# use label1, label2, label1, label2, label1, label2 (in two columns as 
# specified)
##########################################################################
AdjustTask.questionType = singleChoice
AdjustTask.category = Task Adjustment
AdjustTask.purpose =  (Task: "<1:description>",   \
            Period: "<1:stimulusValue>" "<1:stimulusUnit>",  \
            Deadline: "<1:measureValue>", "<1:measureUnit>")  \
Please check a responsibility that can be executed in a different task. 
AdjustTask.question = Can all or part of one of these responsibilities be executed at a different deadline or period?
AdjustTask.optionLabel1 = These responsibilites need to be executed in this task with no changes.
AdjustTask.optionLabel2 = "<2+:name>" can be executed entirely in another task.
AdjustTask.optionLabel3 = "<2+:name>" can be decomposed with part executed in another task.
##########################################################################
#(MAIN::AskQuestion
#	(questionId respToScenarioPerf)
#	(parent nil)
#	(affectedFacts)
#	(parameters Multiple facts)
#	(options)
#	(default) (answer ) (answerAvailable nil) (log nil))
#) 
##########################################################################
respToScenarioPerf.questionType = singleChoice
respToScenarioPerf.category = Get new period or deadline for a responsibility.
respToScenarioPerf.purpose = You have chosen to modify a task. At least part of "<1:name>" will be executed with a different period or deadline.
respToScenarioPerf.question = Please choose from one of the following: 
respToScenarioPerf.optionLabel1 = Please create a new performance scenario.
respToScenarioPerf.optionLabel2 = Choose existing performance scenario:  <2+>
##########################################################################
#(MAIN::AskQuestion
#	(questionId editNewPerformanceScenario)
#	
#	
#	(parameters <Fact-268>)
#	(options nil)
#	(default yes) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
editNewPerformanceScenario.questionType = inputValue
editNewPerformanceScenario.category = Performance
editNewPerformanceScenario.purpose = Replace default values for new scenario.			
editNewPerformanceScenario.question = Please enter new values.
editNewPerformanceScenario.optionLabel1 = Description of performance scenario:
editNewPerformanceScenario.optionLabel2 = Deadline in milliseconds:
editNewPerformanceScenario.optionLabel3 = Period in milliseconds:
##########################################################################
#(MAIN::AskQuestion
#	(questionId editRespsNewPerfScenario)
#	
#	
#	(parameters <Fact-268> <Fact-278> )
#	(options nil)
#	(default yes) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
editRespsNewPerfScenario.questionType = inputValue
editRespsNewPerfScenario.category = Performance
editRespsNewPerfScenario.purpose = Replace default values for decomposed responsibilites and the scenario \
for the second responsibility.
			
editRespsNewPerfScenario.question = Please modify the following:
editRespsNewPerfScenario.optionLabel1 = Name of new responsibility 1:
editRespsNewPerfScenario.optionLabel2 = Description of new responsibility 1:
editRespsNewPerfScenario.optionLabel3 = Execution time of new responsibility 1:
editRespsNewPerfScenario.optionLabel4 = Name of new responsibility 2:
editRespsNewPerfScenario.optionLabel5 = Description of new responsibility 2:
editRespsNewPerfScenario.optionLabel6 = Execution time of new responsibility 2:
editRespsNewPerfScenario.optionLabel7 = Description of performance scenario:
editRespsNewPerfScenario.optionLabel8 = Deadline in milliseconds:
editRespsNewPerfScenario.optionLabel9 = Period in milliseconds:
##########################################################################
#(MAIN::AskQuestion
#	(questionId editResponsibilities1)
#	
#	
#	(parameters <Fact-268> <Fact-278> )
#	(options nil)
#	(default yes) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
editResponsibilities1.questionType = inputValue
editResponsibilities1.category = Performance
editResponsibilities1.purpose = Replace default values for decomposed responsibilites. 
editResponsibilities1.question = Please note if you selected to decompose a responsibility to reduce blocking. \
Responsibility 1 will require the shared resource. \
Responsibility 2 will not require access to the shared resource.
editResponsibilities1.optionLabel1 = Name of new responsibility 1:
editResponsibilities1.optionLabel2 = Description of new responsibility 1:
editResponsibilities1.optionLabel3 = Execution time of new responsibility 1:
editResponsibilities1.optionLabel4 = Name of new responsibility 2:
editResponsibilities1.optionLabel5 = Description of new responsibility 2:
editResponsibilities1.optionLabel6 = Execution time of new responsibility 2:
##########################################################################
#(MAIN::AskQuestion
#	(questionId reduceBlocking)
#	
#	
#	(parameters <Fact-268> <Fact-278> <Fact-299>)
#	(options nil)
#	(default yes) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
reduceBlocking.questionType = yesNo
reduceBlocking.category = Performance
reduceBlocking.purpose = If the shared resource "<4:name>" is only required for \
part of the responsibility "<1:name>" ,\
you may be able to reduce blocking time by decomposing "<1:name>".		
reduceBlocking.question = Higher priority tasks may be blocked by "<2:value>" milliseconds. \
Would you like to decompose "<1:name>" to reduce potential blocking of higher priority tasks? 

##########################################################################
#(MAIN::AskQuestion
#	(questionId interfaceMapping)
#	(parent <Fact-389>)
#	(affectedFacts <Fact-389>)
#	(parameters "Tire preassure monitor" "Barometric pressure compensation" "Tire preassure monitor")
#	(options <Fact-369> <Fact-373> <Fact-371> <Fact-375>)
#	(default all) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
interfaceMapping.questionType = multipleChoice
interfaceMapping.category = Interface Inconsitency
interfaceMapping.purpose = ArchE discovered that a module with an interface has been decomposed. 	
interfaceMapping.question = Module "<1:name>" has been decomposed into the modules listed below." \
			Please select the modules that should realize the interface of "<1:name>" 
interfaceMapping.optionLabel1 = "<1+:name>"
##########################################################################
#(MAIN::AskQuestion
#	(questionId executionTimeInconsistency)
#	
#	
#	(parameters <Fact-268> <Fact-278> )
#	(options nil)
#	(default yes) (answer nil) (answerAvailable nil) (log nil)
#)
##########################################################################
executionTimeInconsistency.questionType = inputValue
executionTimeInconsistency.category = Performance
executionTimeInconsistency.purpose = Maintain Execution Time Consistency. 
executionTimeInconsistency.question = "<1:name>" is decomposed and has <2> execution time. The execution time \
of parent responsibilites is not used in the performance calculations. Please adjust the execution times of the child responsibilites below (If necessary). 
executionTimeInconsistency.optionLabel1 = Execution Time of "<1+:name>"

